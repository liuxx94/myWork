Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?


==============solution==============

java£º

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList<Integer>();
        if(rowIndex == 0){
            result.add(1);
            return result;
        }
        else if(rowIndex == 1){
            result.add(1);
            result.add(1);
            return result;
        }
        else{
            
            for(int row = 1; row <= rowIndex; row ++){
                if(row == 1){
                    result.add(1);
                    result.add(1);
                }
                else{
                    //int sz = result.size();
                    result.add(0, 1);
                    for(int i = 1; i < result.size()-1; i ++){
                        int p = result.get(i);
                        int q = result.get(i + 1);
                        result.set(i, p + q);
                    }
                    //result.add(1);
                }
            }
            return result;
        }
    }
}