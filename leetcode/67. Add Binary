Given two binary strings, return their sum (also a binary string).

For example,
a = "11"
b = "1"
Return "100".


==================solution====================

java：

public class Solution {
    public String addBinary(String a, String b) {
        StringBuffer a_buf = new StringBuffer(a);
        StringBuffer b_buf = new StringBuffer(b);
        StringBuffer result;
       // StringBuffer carry = new StringBuffer();
        char carry = '0';
        int sz_a = a.length(), sz_b = b.length();
        if(sz_a > sz_b)
            result = new StringBuffer(a);
        else
            result = new StringBuffer(b);
        int pa = sz_a - 1, pb = sz_b - 1;
        while(pa >= 0 && pb >= 0){
            if((a_buf.charAt(pa) == '0' && b_buf.charAt(pb) == '1' && carry == '0')
            || (a_buf.charAt(pa) == '1' && b_buf.charAt(pb) == '0' && carry == '0')){
                //不进位 相加结果1
                if(pa >= pb)
                    result.setCharAt(pa, '1');
                else
                    result.setCharAt(pb, '1');
            }
            else if((a_buf.charAt(pa) == '0' && b_buf.charAt(pb) == '1' && carry == '1')
            || (a_buf.charAt(pa) == '1' && b_buf.charAt(pb) == '0' && carry == '1')){
                //进位 相加结果0
                if(pa >= pb)
                    result.setCharAt(pa, '0');
                else
                    result.setCharAt(pb, '0');
                carry = '1';
            }
            else if(a_buf.charAt(pa) == '0' && b_buf.charAt(pb) == '0' && carry == '1'){
                //不进位 相加结果1
                if(pa >= pb)
                    result.setCharAt(pa, '1');
                else
                    result.setCharAt(pb, '1');
                carry = '0';
            }
            else if(a_buf.charAt(pa) == '0' && b_buf.charAt(pb) == '0' && carry == '0'){
                //不进位 相加结果0
                if(pa >= pb)
                    result.setCharAt(pa, '0');
                else
                    result.setCharAt(pb, '0');
                carry = '0';
            }
            else if(a_buf.charAt(pa) == '1' && b_buf.charAt(pb) == '1' && carry == '1'){
                //进位 相加结果1
                if(pa >= pb)
                    result.setCharAt(pa, '1');
                else
                    result.setCharAt(pb, '1');
                carry = '1';
            }
            else if(a_buf.charAt(pa) == '1' && b_buf.charAt(pb) == '1' && carry == '0'){
                //进位 相加结果0
                if(pa >= pb)
                    result.setCharAt(pa, '0');
                else
                    result.setCharAt(pb, '0');
                carry = '1';
            }
            pa --;
            pb --;
        }
        while(pa >= 0){
            if(carry == '1' && a_buf.charAt(pa) == '1'){
                result.setCharAt(pa, '0');
                carry = '1';
            }
            else if(carry == '1' && a_buf.charAt(pa) == '0'){
                result.setCharAt(pa, '1');
                carry = '0';
            }
            else{
                result.setCharAt(pa, a_buf.charAt(pa));
            }
            pa --;
        }
        while(pb >= 0){
            if(carry == '1' && b_buf.charAt(pb) == '1'){
                result.setCharAt(pb, '0');
                carry = '1';
            }
            else if(carry == '1' && b_buf.charAt(pb) == '0'){
                result.setCharAt(pb, '1');
                carry = '0';
            }
            else{
                result.setCharAt(pb, b_buf.charAt(pb));
            }
            pb --;
        }
        if(carry == '1'){
            result.insert(0, '1');
        }
        return result.toString();
    }
}