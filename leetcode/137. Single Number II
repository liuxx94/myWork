


Given an array of integers, every element appears three times except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

================solution=================

java:

public class Solution {
    public int singleNumber(int[] nums) {
        int mask = 1;
        int result = 0;
        int len = nums.length;
        for(int bit = 0; bit < 64; bit ++){
            int count = 0;
            for(int i = 0; i < len; i ++){
                int temp = nums[i] & mask;
                if(temp != 0)
                    count ++;
            }
            if(count % 3 != 0){
                result = result | mask;
            }
            
            mask = mask << 1;
        }
        return result;
        
            
    }
}