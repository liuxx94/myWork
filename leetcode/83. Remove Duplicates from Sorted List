Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.

====================solution=====================

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL || head->next == NULL)
            return head;
        ListNode *cur = head;
        ListNode *prev = cur->next;
        while(prev != NULL){
            if(cur->val == prev->val){
                prev = prev->next;
               cur->next = prev;
            }
            else{
                cur = prev;
                prev = prev->next;
            }
        }
        return head;
  
    }
};